[1mdiff --git a/contracts/Token.sol b/contracts/Token.sol[m
[1mindex cea7764..3c42679 100644[m
[1m--- a/contracts/Token.sol[m
[1m+++ b/contracts/Token.sol[m
[36m@@ -9,14 +9,37 @@[m [mcontract Token {[m
     uint256 public decimals = 18;[m
     uint256 public totalSupply;[m
 [m
[31m-    // Track Balances[m
     mapping(address => uint256) public balanceOf;[m
[31m-    // Send Tokens[m
[31m-[m
[31m-    constructor(string memory _name, string memory _symbol, uint256 _totalSupply) {[m
[31m-         name = _name;[m
[31m-         symbol = _symbol;[m
[31m-         totalSupply = _totalSupply * (10**decimals);[m
[31m-         balanceOf[msg.sender] = totalSupply;[m
[31m-    } [m
[32m+[m[41m[m
[32m+[m[32m    event Transfer([m[41m[m
[32m+[m[32m        address indexed from,[m[41m [m
[32m+[m[32m        address indexed to,[m[41m [m
[32m+[m[32m        uint256 value[m[41m[m
[32m+[m[32m    );[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    constructor([m[41m[m
[32m+[m[32m        string memory _name,[m[41m[m
[32m+[m[32m        string memory _symbol,[m[41m[m
[32m+[m[32m        uint256 _totalSupply[m[41m[m
[32m+[m[32m    ) {[m[41m[m
[32m+[m[32m        name = _name;[m[41m[m
[32m+[m[32m        symbol = _symbol;[m[41m[m
[32m+[m[32m        totalSupply = _totalSupply * (10**decimals);[m[41m[m
[32m+[m[32m        balanceOf[msg.sender] = totalSupply;[m[41m[m
[32m+[m[32m    }[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    function transfer(address _to, uint256 _value)[m[41m[m
[32m+[m[32m        public[m[41m [m
[32m+[m[32m        returns (bool success)[m[41m[m
[32m+[m[32m    {[m[41m[m
[32m+[m[32m        require(balanceOf[msg.sender] >= _value);[m[41m [m
[32m+[m[32m        require(_to != address(0));[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        balanceOf[msg.sender] = balanceOf[msg.sender] - _value;[m[41m[m
[32m+[m[32m        balanceOf[_to] = balanceOf[_to] + _value;[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        emit Transfer(msg.sender, _to, _value);[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        return true;[m[41m[m
[32m+[m[32m    }[m[41m[m
 }[m
[1mdiff --git a/test/Token.js b/test/Token.js[m
[1mindex f73b4e2..466ad50 100644[m
[1m--- a/test/Token.js[m
[1m+++ b/test/Token.js[m
[36m@@ -6,7 +6,7 @@[m [mconst tokens = (n) => {[m
 }[m
 [m
 describe('Token', ()=> {[m
[31m-	let token, accounts, deployer[m
[32m+[m	[32mlet token, accounts, deployer, receiver[m[41m[m
 [m
 	beforeEach(async() => {[m
 	  const Token = await ethers.getContractFactory('Token')[m
[36m@@ -14,6 +14,7 @@[m [mdescribe('Token', ()=> {[m
 	  [m
 	  accounts = await ethers.getSigners()[m
 	  deployer = accounts[0][m
[32m+[m	[32m  receiver = accounts[1][m[41m[m
 	})[m
 [m
     describe('Deployment', () => {[m
[36m@@ -41,5 +42,51 @@[m [mdescribe('Token', ()=> {[m
     	it('assigns total supply to deployer', async () => {[m
             expect(await token.balanceOf(deployer.address)).to.equal(totalSupply)[m
         })[m
[32m+[m[41m  	[m
   	})[m
[32m+[m[41m[m
[32m+[m[41m[m
[32m+[m[41m  [m	[32mdescribe('Sending Tokens', () => {[m[41m[m
[32m+[m[41m  [m		[32mlet amount, transaction, result[m[41m[m
[32m+[m[41m[m
[32m+[m[41m  [m		[32mdescribe('Success', () => {[m[41m[m
[32m+[m[41m[m
[32m+[m[41m  [m		[32mbeforeEach(async() => {[m[41m[m
[32m+[m[41m  [m		[32mamount = tokens(100)[m[41m[m
[32m+[m[41m  [m		[32mlet transaction = await token.connect(deployer).transfer(receiver.address, amount)[m[41m[m
[32m+[m[41m  [m		[32mresult = await transaction.wait()[m[41m[m
[32m+[m[41m  [m		[32m})[m[41m[m
[32m+[m[41m  		[m
[32m+[m[41m  [m		[32mit('transfers token balences', async () => {[m[41m  		    [m
[32m+[m[41m  [m		[32m    expect (await token.balanceOf(deployer.address)).to.equal(tokens(999900))[m[41m[m
[32m+[m[41m  [m		[32m    expect (await token.balanceOf(receiver.address)).to.equal(amount)[m[41m[m
[32m+[m[41m  [m		[32m})[m[41m[m
[32m+[m[41m  [m		[32m// ...[m[41m[m
[32m+[m[41m  [m		[32mit('emits a transfer event', async () => {[m[41m[m
[32m+[m[41m  [m		[32m  const event = result.events[0][m[41m[m
[32m+[m[41m  [m		[32m  expect(event.event).to.equal('Transfer')[m[41m[m
[32m+[m[41m[m
[32m+[m[41m  [m		[32m  const args = event.args[m[41m[m
[32m+[m[41m  [m		[32m  expect(args.from).to.equal(deployer.address)[m[41m[m
[32m+[m[41m  [m		[32m  expect(args.to).to.equal(receiver.address)[m[41m[m
[32m+[m[41m  [m		[32m  expect(args.value).to.equal(amount)[m[41m[m
[32m+[m[41m  [m		[32m})[m[41m[m
[32m+[m[41m  [m	[32m})[m[41m[m
[32m+[m[41m[m
[32m+[m[32m        describe('Failure', () => {[m[41m[m
[32m+[m[32m          it('rejects insufficient balances', async () => {[m[41m[m
[32m+[m[32m            // Transfer more tokens than deployer has - 100M[m[41m[m
[32m+[m[32m            const invalidAmount = tokens(100000000)[m[41m[m
[32m+[m[32m            await expect (token.connect(deployer).transfer(receiver.address, invalidAmount)).to.be.reverted[m[41m[m
[32m+[m[32m          })[m[41m[m
[32m+[m[41m[m
[32m+[m[32m          it('rejects invalid recipent', async () => {[m[41m[m
[32m+[m[32m            const amount = tokens(100)[m[41m[m
[32m+[m[32m            await expect (token.connect(deployer).transfer('0x0000000000000000000000000000000000000000', amount)).to.be.reverted[m[41m[m
[32m+[m[32m          })[m[41m[m
[32m+[m[41m[m
[32m+[m[41m  [m	[32m    })[m[41m[m
[32m+[m[41m[m
[32m+[m[32m    })[m[41m[m
 })[m
[41m+[m
